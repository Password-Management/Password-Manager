# Stage 1: Build the Golang binary
FROM golang:1.23.3-alpine AS builder

WORKDIR /app

# Copy the go.mod and go.sum files first to leverage caching
COPY password-manager/go.mod password-manager/go.sum ./password-manager/

# Change to the password-manager directory
WORKDIR /app/password-manager

# Download Go modules
RUN go mod download

# Copy the rest of the project code
COPY password-manager/ .

# Build the Go application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o app .

# Stage 2: Create a minimal image with only the binary and necessary files
FROM alpine:latest

WORKDIR /app


# Copy the built binary and configuration files from the builder stage
COPY --from=builder /app/password-manager/app .
COPY --from=builder /app/password-manager/.env ./.env
COPY --from=builder /app/password-manager/Makefile ./Makefile

# Set environment variables (you can modify these if needed)
ENV DATABASE_URL "postgres://postgres:password@db:5432/passwordManagement?sslmode=disable"

# Expose port 8000 for the Go application
EXPOSE 8000

# Set a volume for persistent data
VOLUME /app/data

# Command to run the Go application
CMD ["./app"]
